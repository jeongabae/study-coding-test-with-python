import sys
def input():
    return sys.stdin.readline().rstrip()

N = int(input())
P = [0]+list(map(int,input().split())) # 0개 구매 시 0원이므로 0 추가해줌.
d = P# d[i] = 카드 i개를 갖기 위해 지불해야 하는 금액의 최댓값
               # P를 붙이는 이유 : 만약 4개를 구매하고싶다고하면
               # 4장들어있는 카드 팩(P4)을 사기 위한 값이, 다른 팩들을 조합해서 샀을 떄의 금액 보다 높을 수 있기 때문에 일단 먼저 저장해놓음.

for i in range(1,N+1):
    for j in range(1,i+1):
        d[i] = max(d[i],P[j]+d[i-j])
print(d[N])
"""
d[N] => 카드 N개를 갖기 위해 지불해야 하는 금액의 최댓값은?
카드 1개가 들어있는 카드팩(P[1])을 구매하고 카드 N-1개를 구매했을 때의 금액 최댓값(d[N-1]) 더함
카드 2개가 들어있는 카드팩(P[2])을 구매하고 카드 N-2개를 구매했을 때의 금액 최댓값(d[N-2]) 더함
카드 1개가 들어있는 카드팩(P[1])을 구매하고 카드 N-1개를 구매했을 때의 금액 최댓값(d[N-3]) 더함
....
카드 N-1개가 들어있는 카드팩(P[N-1])을 구매하고 카드 N-(N-1)=1(d[1])개를 구매했을 때의 금액 최댓값 더함
카드 N개가 들어있는 카드팩(P[N])을 구매하고 카드 N-(N)=0(d[0])개를 구매
이렇게 계산.
그래서 d[0]부터 ~ d[N]을 계산하기 위해
for i in range(1,N+1):
    for j in range(1,i+1):
        d[i] = max(d[i],P[j]+d[i-j]) 사용
"""